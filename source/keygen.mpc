# Calls API to generate key pair for LWE
# Generates and distributes shares of secret keys to k committee members
# Public key is revealed to all 

from Compiler import mpc_math

execfile('/root/SCALE-MAMBA/Programs/ring/ring.mpc')
execfile('/root/SCALE-MAMBA/Programs/lwe/lwe.mpc')

        
k = 19 # Size of committee (total protocol is k+1)

l = 1 # Message length
nBitsN = 13
N_ = 1 # Half-width of binomial distribution
lgM = 15
N = 8192 # Security parameter 

# w is chosen so that w^n = -1 (mod p) 
#   where p is the size of the prime field
w2048 = cint(1662636632232769309036)
r = Ring(nBitsN, w2048)

lwe = LWE(r, N_, lgM, l) 

# Generating key pair (a,b) is public, s is secret
[a, b, s] = lwe.key_gen()

# Reveal a public list to all
def print_list(a):
        for k in range(len(a)):
                print a[k]

# Revealing public key to all
print_list(a)
print_list(b)

# Generating shares for secret key
for i in range(N):
        output_shares(0, s[i])
